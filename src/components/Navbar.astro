---
import Button from "./ui/Button.astro";
import Navlink from "./ui/Navlink.astro";
---

<nav
  class="w-full max-w-screen-2xl py-4 px-8 lg:px-28 border-b fixed top-0 bg-white z-50 backdrop-blur-sm bg-opacity-80"
>
  <div
    class="container mx-auto flex items-center justify-between text-blue-gray-900"
  >
    <a
      href="/"
      class="font-bold leading-relaxed text-gray-800 sm:text-lg"
      style="cursor: pointer;"
    >
      @dimasgda
    </a>
    <ul class="hidden sm:flex items-center gap-8">
      <Navlink href="/#about-me" text="About Me" />
      <Navlink href="/#skills" text="Skills" />
      <Navlink href="/#experiences" text="Experiences" />
      <Navlink href="/blogs" text="Blogs" />
    </ul>
    <div class="flex gap-3">
      <a
        href="https://drive.usercontent.google.com/download?id=1Y93Yu2d4qOb_J0p_ZPJ6AlFsz7VRnw2T&export=download&authuser=0&confirm=t&uuid=75398d2a-c065-48c9-9c8a-bc274b488087&at=AENtkXbW7M33EWeGH9JSl2syOI-V:1732971318488"
      >
        <Button variant="primary" className="hidden sm:inline-block"
          >Download CV</Button
        >
      </a>
    </div>
    <Button
      variant="secondary"
      className="sm:hidden !p-0 border-0"
      id="navbar-toggle-collapse"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="currentColor"
        aria-hidden="true"
        class="h-6 w-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path></svg
      >
    </Button>
  </div>
  <div
    class="w-full h-0 mx-auto sm:px-8 basis-full overflow-hidden transition-all duration-300 ease-in lg:hidden"
    id="navbar-collapse"
  >
    <ul class="mt-2 flex flex-col gap-4 pt-2 pb-4">
      <Navlink href="/#about-me" text="About Me" />
      <Navlink href="/#skills" text="Skills" />
      <Navlink href="/#experiences" text="Experiences" />
      <Navlink href="/blogs" text="Blogs" />
    </ul>
    <div class="flex gap-3">
      <a
        href="https://drive.usercontent.google.com/download?id=1Y93Yu2d4qOb_J0p_ZPJ6AlFsz7VRnw2T&export=download&authuser=0&confirm=t&uuid=75398d2a-c065-48c9-9c8a-bc274b488087&at=AENtkXbW7M33EWeGH9JSl2syOI-V:1732971318488"
        class="grow"
      >
        <Button variant="primary" className="w-full">Download CV</Button>
      </a>
    </div>
  </div>
</nav>

<script>
  const navbarCollapse = document.getElementById("navbar-collapse");
  const toggleNavbarButton = document.getElementById("navbar-toggle-collapse");

  const toggleNavbar = () => {
    if (navbarCollapse.classList.contains("h-auto")) {
      // Collapse navbar
      navbarCollapse.style.height = `${navbarCollapse.scrollHeight}px`; // Set current height
      requestAnimationFrame(() => {
        navbarCollapse.style.height = "0"; // Animate to 0
      });
      navbarCollapse.classList.remove("h-auto");
    } else {
      // Expand navbar
      navbarCollapse.style.height = "0"; // Reset to 0 for calculation
      navbarCollapse.classList.add("h-auto");
      requestAnimationFrame(() => {
        navbarCollapse.style.height = `${navbarCollapse.scrollHeight}px`; // Animate to full height
      });
    }

    // Remove inline style after transition ends (to allow auto height if resized)
    navbarCollapse.addEventListener(
      "transitionend",
      () => {
        if (!navbarCollapse.classList.contains("h-auto")) {
          navbarCollapse.style.height = ""; // Reset height
        }
      },
      { once: true }
    );
  };

  toggleNavbarButton.addEventListener("click", toggleNavbar);

  const navLinks = document.querySelectorAll('a[href^="/#"]');
  navLinks.forEach((navLink) => {
    navLink.addEventListener("click", function (e) {
      e.preventDefault();
      const targetId = this.getAttribute("href").replace("/#", ""); // Mendapatkan ID target
      const targetElement = document.getElementById(targetId);

      if (targetElement) {
        toggleNavbar();
        const elementPosition = targetElement.getBoundingClientRect().top; // Jarak elemen ke atas viewport
        const offsetPosition = window.scrollY + elementPosition - 100; // Tambahkan offset -100px

        window.scrollTo({
          top: offsetPosition,
          behavior: "smooth", // Efek smooth scroll
        });
      } else {
        window.location.href = this.getAttribute("href");
      }
    });
  });
</script>
